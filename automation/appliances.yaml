## appliances.yaml automation

# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  Subwoofer
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
- alias: 'Subwoofer ON'
  trigger:
    - platform: state
      entity_id: media_player.lounge_main
      to: 'idle'
    - platform: state
      entity_id: media_player.lounge_main
      to: 'playing'
  action:
    - service: switch.turn_on
      entity_id: switch.subwoofer

- alias: 'Subwoofer OFF'
  trigger:
    platform: state
    entity_id: media_player.lounge_main
    to: 'off'
    for: "00:00:30"
  action:
    - service: switch.turn_off
      entity_id: switch.subwoofer

# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  Dryer
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
- alias: 'Dryer State - Door'
  trigger:
    platform: numeric_state
    entity_id: sensor.dryer_watts
    above: 5
    below: 20
    for:
      seconds: 2
  action:
    - service: mqtt.publish
      data:
        topic: hass/state/dryer
        payload: 'Door Open'
        retain: 'true'
- alias: 'Dryer State - Drying'
  trigger:
    platform: numeric_state
    entity_id: sensor.dryer_watts
    above: 50
    for:
      seconds: 2
  action:
    - service: mqtt.publish
      data:
        topic: hass/state/dryer
        payload: 'Drying'
        retain: 'true'
- alias: 'Dryer State - Idle'
  trigger:
    platform: numeric_state
    entity_id: sensor.dryer_watts
    below: 6
    for:
      seconds: 2
  action:
    - service: mqtt.publish
      data:
        topic: hass/state/dryer
        payload: 'Idle'
        retain: 'true'
- alias: 'Dryer Finished'
  trigger:
    platform: state
    entity_id: sensor.dryer_state
    from: 'Drying'
    to: 'Idle'
  action:
    - service: script.turn_on
      entity_id: script.notify_darren
      data:
        variables:
          message: 'Dryer finished!'
    - service: script.turn_on
      entity_id: script.notify_blythe
      data:
        variables:
          message: 'Dryer finished!'
    - service: script.announce
      data:
        sonos_entity: media_player.kitchen
#        volume: 0.4
        message: 'Dryer finished'
        delay: '00:00:02'
        not_at_night: yes
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  Washing Machine
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# - alias: 'Washer State - Door'
#   trigger:
#     platform: numeric_state
#     entity_id: sensor.washer_watts
#     above: 5
#     below: 20
#     for:
#       seconds: 2
#   action:
#     - service: mqtt.publish
#       data:
#         topic: hass/state/washer
#         payload: 'Door Open'
#         retain: 'true'
- alias: 'Washer State - Washing'
  trigger:
    platform: numeric_state
    entity_id: sensor.washer_watts
    above: 30
    for:
      seconds: 2
# Make sure washer isn't already running and delaying between cycles - don't re-trigger and cause stopwatch reset
  condition:
    condition: template
    value_template: "{{ states.sensor.washer_state.state != 'Washing' }}"
  action:
    - service: mqtt.publish
      data:
        topic: hass/state/washer
        payload: 'Washing'
        retain: 'true'
- alias: 'Washer State - Idle'
  trigger:
    platform: numeric_state
    entity_id: sensor.washer_watts
    below: 6
    for:
      minutes: 2
  action:
    - service: mqtt.publish
      data:
        topic: hass/state/washer
        payload: 'Idle'
        retain: 'true'
- alias: 'Washing Machine Finished'
  trigger:
    platform: state
    entity_id: sensor.washer_state
    from: 'Washing'
    to: 'Idle'
  action:
    - service: script.turn_on
      entity_id: script.notify_darren
      data:
        variables:
          message: 'Washing Machine finished!'
    - service: script.turn_on
      entity_id: script.notify_blythe
      data:
        variables:
          message: 'Washing Machine finished!'
    - service: script.announce
      data:
        sonos_entity: media_player.kitchen
#        volume: 0.4
        message: 'Washing machine finished'
        delay: '00:00:03'
        not_at_night: yes
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  Dishwasher
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
- alias: 'Dishwasher State - Washing'
  trigger:
    platform: numeric_state
    entity_id: sensor.dishwasher_watts
    above: 30
    for:
      seconds: 2
# Make sure dishwasher isn't already running and delaying between cycles - don't re-trigger and cause stopwatch reset
  condition:
    condition: template
    value_template: "{{ states.sensor.dishwasher_state.state != 'Washing' }}"
  action:
    - service: mqtt.publish
      data:
        topic: hass/state/dishwasher
        payload: 'Washing'
        retain: 'true'
- alias: 'Dishwasher State - Idle'
  trigger:
    platform: numeric_state
    entity_id: sensor.dishwasher_watts
    below: 3
    for:
      minutes: 9
  action:
    - service: mqtt.publish
      data:
        topic: hass/state/dishwasher
        payload: 'Idle'
        retain: 'true'
- alias: 'Dishwasher Finished'
  trigger:
    platform: state
    entity_id: sensor.dishwasher_state
    from: 'Washing'
    to: 'Idle'
  action:
    - service: script.turn_on
      entity_id: script.notify_darren
      data:
        variables:
          message: 'Dishwasher finished!'
    - service: script.turn_on
      entity_id: script.notify_blythe
      data:
        variables:
          message: 'Dishwasher finished!'
    - service: script.announce
      data:
        sonos_entity: media_player.kitchen
#        volume: 0.4
        message: 'Dishwasher finished'
        delay: '00:00:03'
        not_at_night: yes
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  Turntable
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
- alias: 'Turntable State - On'
  trigger:
    platform: numeric_state
    entity_id: sensor.turntable_watts
    above: 5
    # for:
    #   seconds: 10
  action:
    - service: mqtt.publish
      data:
        topic: hass/state/turntable
        payload: 'On'
        retain: 'true'

- alias: 'Turntable State - Off'
  trigger:
    platform: numeric_state
    entity_id: sensor.turntable_watts
    below: 4
    for: "00:00:03"
  action:
    - service: mqtt.publish
      data:
        topic: hass/state/turntable
        payload: 'Off'
        retain: 'true'

- alias: 'Turntable On - Amp On'
  trigger:
    platform: state
    entity_id: sensor.turntable_state
    from: 'Off'
    to: 'On'
  action:
    - service: media_player.turn_on
      data:
        entity_id: media_player.lounge_main
    - delay:
        seconds: 5
    - service: media_player.select_source
      data:
        entity_id: media_player.lounge_main
        source: 'audio3'

- alias: 'Turntable Off - Amp Off'
  trigger:
    platform: state
    entity_id: sensor.turntable_state
    from: 'On'
    to: 'Off'
  action:
    - service: media_player.turn_off
      data:
        entity_id: media_player.lounge_main

- alias: 'Turntable Turned On'
  trigger:
    - platform: state
      entity_id: sensor.turntable_state
      from: 'Off'
      to: 'On'
  action:
    - service: script.turn_on
      entity_id: script.notify_darren
      data:
        variables:
          message: 'Turntable On!'

- alias: 'Turntable Still On'
  trigger:
    - platform: time_pattern
      # Trigger every hour, on the hour
      # hours: "/1"
      minutes: "/30"
    - platform: state
      entity_id: input_select.house_mode
      to: 'Bedtime'
  condition:
    condition: state
    entity_id: sensor.turntable_state
    state: 'On'
  action:
    - service: script.turn_on
      entity_id: script.notify_darren
      data:
        variables:
          message: 'Turntable still on!'
    # - service: script.turn_on
    #   entity_id: script.notify_blythe
    #   data:
    #     variables:
    #       message: 'Dishwasher finished!'
    # - service: tts.google_translate_say
    #   entity_id:
    #     - media_player.study
    #   data_template:
    #      message: "Dishwasher finished"
